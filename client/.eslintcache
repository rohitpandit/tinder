[{"/home/rohit/dev/tinder/client/src/index.js":"1","/home/rohit/dev/tinder/client/src/App.js":"2","/home/rohit/dev/tinder/client/src/pages/Signup.js":"3","/home/rohit/dev/tinder/client/src/pages/Login.js":"4","/home/rohit/dev/tinder/client/src/pages/Match.js":"5","/home/rohit/dev/tinder/client/src/pages/Chat.js":"6","/home/rohit/dev/tinder/client/src/pages/Index.js":"7","/home/rohit/dev/tinder/client/src/pages/Profile.js":"8","/home/rohit/dev/tinder/client/src/component/layout/Navbar.js":"9","/home/rohit/dev/tinder/client/src/pages/PageNotFound.js":"10","/home/rohit/dev/tinder/client/src/component/layout/Footer.js":"11","/home/rohit/dev/tinder/client/src/component/Image.js":"12","/home/rohit/dev/tinder/client/src/component/Loading.js":"13","/home/rohit/dev/tinder/client/src/uitls/history.js":"14"},{"size":214,"mtime":1612260895624,"results":"15","hashOfConfig":"16"},{"size":2985,"mtime":1614307414004,"results":"17","hashOfConfig":"16"},{"size":3156,"mtime":1612961662729,"results":"18","hashOfConfig":"16"},{"size":2417,"mtime":1613269188290,"results":"19","hashOfConfig":"16"},{"size":1686,"mtime":1613641307326,"results":"20","hashOfConfig":"16"},{"size":3667,"mtime":1614416724898,"results":"21","hashOfConfig":"16"},{"size":4832,"mtime":1613448883611,"results":"22","hashOfConfig":"16"},{"size":12458,"mtime":1614418530773,"results":"23","hashOfConfig":"16"},{"size":1725,"mtime":1613448803693,"results":"24","hashOfConfig":"16"},{"size":355,"mtime":1613448914743,"results":"25","hashOfConfig":"16"},{"size":350,"mtime":1612346989713,"results":"26","hashOfConfig":"16"},{"size":261,"mtime":1612754374315,"results":"27","hashOfConfig":"16"},{"size":300,"mtime":1613276604178,"results":"28","hashOfConfig":"16"},{"size":88,"mtime":1612883389642,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"650lu5",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"32"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"32"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"/home/rohit/dev/tinder/client/src/index.js",[],["62","63"],"/home/rohit/dev/tinder/client/src/App.js",[],"/home/rohit/dev/tinder/client/src/pages/Signup.js",[],"/home/rohit/dev/tinder/client/src/pages/Login.js",[],"/home/rohit/dev/tinder/client/src/pages/Match.js",[],"/home/rohit/dev/tinder/client/src/pages/Chat.js",["64","65","66","67"],"import React, { useState, useEffect, useCallback } from 'react';\nimport { io } from 'socket.io-client';\nimport moment from 'moment';\nimport Navbar from '../component/layout/Navbar';\nimport Footer from '../component/layout/Footer';\n\nlet id = 0;\nconst recipient = window.location.pathname.split('/')[2];\nconsole.log(recipient);\n\nif (localStorage.getItem('token')) {\n\tid = localStorage.getItem('token');\n}\n\nconst socket = io('http://localhost:5004', { query: { id } });\n\n//chat storing locally to the localstore\nlet conversation = null;\nif (!localStorage.getItem(`conversations[${recipient}]`)) {\n\tlocalStorage.setItem(`conversations[${recipient}]`, []);\n\tconversation = [];\n} else {\n\tconversation = JSON.parse(\n\t\tlocalStorage.getItem(`conversations[${recipient}]`)\n\t);\n}\n\nconst Chat = ({ setIsLogged, setTotalViewed }) => {\n\tconst [chat, setChat] = useState(conversation);\n\tconst [message, setMessage] = useState('');\n\n\t//function for settting the view into the last message\n\tconst setRef = useCallback((node) => {\n\t\tif (node) {\n\t\t\tnode.scrollIntoView({ smooth: true });\n\t\t}\n\t});\n\n\t//function to store the message to the localstore\n\t//this function handles all the messages\n\tconst addToChat = ({ sender, message }) => {\n\t\tconsole.log(sender);\n\t\tconsole.log('added to chat');\n\n\t\tsetChat([...chat, { sender, message }]);\n\n\t\tlocalStorage.setItem(`conversations[${recipient}]`, JSON.stringify(chat));\n\t\tsetMessage('');\n\t};\n\n\t//function for handling the message sending form the user\n\tconst onMessageSend = (sendTo, message) => {\n\t\tconsole.log(chat);\n\t\tsocket.emit('send-message', { recipient: sendTo, message });\n\t\taddToChat({ sender: 'You', message });\n\t};\n\n\tconst onSubmitHandler = (e) => {\n\t\te.preventDefault();\n\n\t\tif (message.length > 0) {\n\t\t\tonMessageSend(recipient, message);\n\t\t\tsetMessage('');\n\t\t}\n\n\t\tdocument.getElementById('message-input').focus();\n\t};\n\n\tuseEffect(() => {\n\t\tif (socket == null) {\n\t\t\treturn;\n\t\t}\n\n\t\tsocket.on('recieve-message', addToChat);\n\n\t\treturn () => socket.off('recieve-message');\n\t}, [socket, addToChat]);\n\n\treturn (\n\t\t<div>\n\t\t\t<Navbar setTotalViewed={setTotalViewed} setIsLogged={setIsLogged} />\n\t\t\t<div className='container mb-5 mt-2'>\n\t\t\t\t<h1>Chat</h1>\n\t\t\t\t<hr />\n\t\t\t\t<div\n\t\t\t\t\tclassName='container p-2 my-2 d-flex flex-column  overflow-auto'\n\t\t\t\t\tstyle={chatContainer}>\n\t\t\t\t\t{chat &&\n\t\t\t\t\t\tchat.map((converse, index) => {\n\t\t\t\t\t\t\tconst lastMessage = chat.length - 1;\n\t\t\t\t\t\t\t// console.log(conversation[lastMessage]);\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t\tref={lastMessage ? setRef : null}\n\t\t\t\t\t\t\t\t\tkey={index}\n\t\t\t\t\t\t\t\t\tclassName={`d-flex flex-column rounded p-2 my-1 ${\n\t\t\t\t\t\t\t\t\t\tconverse.sender === 'You'\n\t\t\t\t\t\t\t\t\t\t\t? 'align-self-end align-items-end'\n\t\t\t\t\t\t\t\t\t\t\t: 'align-self-start'\n\t\t\t\t\t\t\t\t\t}`}>\n\t\t\t\t\t\t\t\t\t{console.log(converse.message)}\n\t\t\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t\t\tclassName={`border rounded p-1 ${\n\t\t\t\t\t\t\t\t\t\t\tconverse.sender === 'You'\n\t\t\t\t\t\t\t\t\t\t\t\t? ' bg-success text-white'\n\t\t\t\t\t\t\t\t\t\t\t\t: 'bg-light'\n\t\t\t\t\t\t\t\t\t\t}`}>\n\t\t\t\t\t\t\t\t\t\t{converse.message}\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div className='small text-muted'>{converse.sender}</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t})}\n\t\t\t\t</div>\n\n\t\t\t\t<div className='container align-self-end '>\n\t\t\t\t\t<form className='d-flex' onSubmit={onSubmitHandler}>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\tid='message-input'\n\t\t\t\t\t\t\tvalue={message}\n\t\t\t\t\t\t\tonChange={(e) => setMessage(e.target.value)}\n\t\t\t\t\t\t\tclassName='form-control'\n\t\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<button type='submit' className='btn btn-success'>\n\t\t\t\t\t\t\tSend\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</form>\n\t\t\t\t</div>\n\t\t\t</div>\n\n\t\t\t<Footer />\n\t\t</div>\n\t);\n};\n\nconst chatContainer = {\n\theight: '60vh',\n};\n\nconst messageContainer = {\n\theight: '75vh',\n\toverflow: 'scroll',\n};\n\nexport default Chat;\n","/home/rohit/dev/tinder/client/src/pages/Index.js",["68","69"],"import axios from 'axios';\nimport React, { Fragment, useState, useEffect } from 'react';\nimport Footer from '../component/layout/Footer';\nimport Navbar from '../component/layout/Navbar';\n// import Loading from '../component/Loading';\n\nconst Index = ({ setIsLogged, totalViewed, setTotalViewed }) => {\n\t// const pastViewedProfiles = localStorage\n\n\tconsole.log(totalViewed);\n\n\tconst [name, setName] = useState('');\n\tconst [age, setAge] = useState(0);\n\tconst [id, setId] = useState('');\n\tconst [photoCount, setPhotoCount] = useState(0);\n\tconst [loading, setLoading] = useState(false);\n\tconst [currentCount, setCurrntCount] = useState(0);\n\n\t//useEffect for getting the user data like name and age\n\tuseEffect(() => {\n\t\tsetCurrntCount(0);\n\t\tgetUserName(totalViewed);\n\t\tgetUserProfile(totalViewed, 0);\n\t\tlocalStorage.setItem('totalViewed', totalViewed);\n\t}, [totalViewed]);\n\n\t//function for setting the match to the get saved in the match service\n\tconst setAccept = async (personId) => {\n\t\tconsole.log(personId);\n\t\tawait axios.post('http://localhost:5000/match', { personId });\n\t};\n\n\tconst getUserName = async (skip) => {\n\t\tconst userData = await axios.get(\n\t\t\t`http://localhost:5000/index/user/${skip}`\n\t\t);\n\t\tconst { user } = userData.data;\n\t\tconsole.log(user);\n\t\tsetPhotoCount(user.photosLength);\n\t\tsetName(user.firstName + ' ' + user.lastName);\n\t\tsetId(user._id);\n\n\t\tsetAge(\n\t\t\tnew Date().toLocaleDateString('en-US').split('/')[2] -\n\t\t\t\tuser.dob.split('-')[0]\n\t\t);\n\t\tif (userData.data.photoCount !== 0) {\n\t\t\tsetLoading(true);\n\t\t}\n\t};\n\n\tconst getUserProfile = async (skip, photoNum) => {\n\t\t//getting the first photo of the user\n\t\tconst photo = await axios.get(\n\t\t\t`http://localhost:5000/index/photo/${photoNum}/${skip}`\n\t\t);\n\t\tconsole.log(photo.data.photo);\n\n\t\tconst arrayBufferView = new Uint8Array(photo.data.photo.data);\n\t\tconst url = URL.createObjectURL(\n\t\t\tnew Blob([arrayBufferView], { type: MimeType })\n\t\t);\n\n\t\tlet img = document.getElementById('profile-img');\n\t\tconsole.log(img);\n\t\timg.src = url;\n\t\tsetLoading(false);\n\n\t\timg.onload = (e) => URL.revokeObjectURL(url);\n\t};\n\n\t//Arrow handlers\n\tconst onLeftArrowHandler = () => {\n\t\tif (photoCount === 0) {\n\t\t\treturn;\n\t\t}\n\t\tif (currentCount === 0) {\n\t\t\treturn;\n\t\t}\n\t\tlet count = currentCount;\n\t\tcount--;\n\t\tgetUserProfile(totalViewed, count);\n\t\tsetCurrntCount(count);\n\t};\n\n\tconst onRightArrowHandler = () => {\n\t\tif (photoCount === 0) {\n\t\t\treturn;\n\t\t}\n\t\tif (currentCount === photoCount - 1) {\n\t\t\treturn;\n\t\t}\n\t\tlet count = currentCount;\n\t\tcount++;\n\t\tgetUserProfile(totalViewed, count);\n\t\tsetCurrntCount(count);\n\t};\n\n\t//Handling the dislike/Reject\n\tconst rejectHandler = () => {\n\t\tconsole.log('rejected');\n\t\tlet viewed = totalViewed;\n\t\tviewed++;\n\t\tsetTotalViewed(viewed);\n\t\tconsole.log(viewed);\n\t};\n\n\t//handling the like/Accept\n\tconst acceptHandler = () => {\n\t\tconsole.log('accepted');\n\t\tlet viewed = totalViewed;\n\t\tviewed++;\n\t\tsetTotalViewed(viewed);\n\t\tconsole.log(viewed);\n\t\tsetAccept(id);\n\t};\n\n\treturn (\n\t\t<Fragment>\n\t\t\t<Navbar setTotalViewed={setTotalViewed} setIsLogged={setIsLogged} />\n\t\t\t<main className='container' style={{ height: '100vh' }}>\n\t\t\t\t<div className='d-flex m-2 justify-content-center align-items-center '>\n\t\t\t\t\t<div\n\t\t\t\t\t\tonClick={onLeftArrowHandler}\n\t\t\t\t\t\tclassName='shadow m-2 pt-2 pb-2 pl-3 pr-3 border bg-dark text-light rounded-circle'>\n\t\t\t\t\t\t<i className='fas fa-chevron-left'></i>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div\n\t\t\t\t\t\tclassName=' shadow card pl-6 pr-6 border position-relative'\n\t\t\t\t\t\tstyle={{ width: '25rem' }}>\n\t\t\t\t\t\t{photoCount === 0 ? (\n\t\t\t\t\t\t\t<i\n\t\t\t\t\t\t\t\tclassName='card-img-top fas fa-user fa-10x d-flex justify-content-center align-items-center bg-dark text-light'\n\t\t\t\t\t\t\t\tstyle={{ height: '30rem', objectFit: 'cover' }}></i>\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t<img\n\t\t\t\t\t\t\t\tid='profile-img'\n\t\t\t\t\t\t\t\tclassName='card-img-top '\n\t\t\t\t\t\t\t\talt='profile image'\n\t\t\t\t\t\t\t\tstyle={{ height: '30rem', objectFit: 'cover' }}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t)}\n\n\t\t\t\t\t\t<div\n\t\t\t\t\t\t\tclassName='card-body position-absolute pl-5 pr-5 pb-1'\n\t\t\t\t\t\t\tstyle={{ bottom: '0', left: '0', width: '100%' }}>\n\t\t\t\t\t\t\t<h5 className='card-title text-light '>\n\t\t\t\t\t\t\t\t<span className='bg-dark p-2 rounded'>{name}</span>\n\t\t\t\t\t\t\t\t{'  '}\n\t\t\t\t\t\t\t\t<span className='bg-dark p-2 rounded-circle  '>\n\t\t\t\t\t\t\t\t\t<strong>{age}</strong>\n\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t</h5>\n\n\t\t\t\t\t\t\t<div className='d-flex justify-content-between  '>\n\t\t\t\t\t\t\t\t<button onClick={rejectHandler} className='btn btn-danger'>\n\t\t\t\t\t\t\t\t\tReject\n\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t<button onClick={acceptHandler} className='btn btn-success'>\n\t\t\t\t\t\t\t\t\tAccept\n\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div\n\t\t\t\t\t\tonClick={onRightArrowHandler}\n\t\t\t\t\t\tclassName='shadow m-2 pt-2 pb-2 pl-3 pr-3 border bg-dark text-light rounded-circle'>\n\t\t\t\t\t\t<i className='fas fa-chevron-right'></i>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</main>\n\t\t\t<Footer />\n\t\t</Fragment>\n\t);\n};\n\nexport default Index;\n","/home/rohit/dev/tinder/client/src/pages/Profile.js",[],"/home/rohit/dev/tinder/client/src/component/layout/Navbar.js",[],"/home/rohit/dev/tinder/client/src/pages/PageNotFound.js",[],"/home/rohit/dev/tinder/client/src/component/layout/Footer.js",[],["70","71"],"/home/rohit/dev/tinder/client/src/component/Image.js",[],"/home/rohit/dev/tinder/client/src/component/Loading.js",[],"/home/rohit/dev/tinder/client/src/uitls/history.js",[],{"ruleId":"72","replacedBy":"73"},{"ruleId":"74","replacedBy":"75"},{"ruleId":"76","severity":1,"message":"77","line":3,"column":8,"nodeType":"78","messageId":"79","endLine":3,"endColumn":14},{"ruleId":"80","severity":1,"message":"81","line":33,"column":17,"nodeType":"78","endLine":33,"endColumn":28},{"ruleId":"80","severity":1,"message":"82","line":77,"column":5,"nodeType":"83","endLine":77,"endColumn":24,"suggestions":"84"},{"ruleId":"76","severity":1,"message":"85","line":141,"column":7,"nodeType":"78","messageId":"79","endLine":141,"endColumn":23},{"ruleId":"76","severity":1,"message":"86","line":16,"column":9,"nodeType":"78","messageId":"79","endLine":16,"endColumn":16},{"ruleId":"87","severity":1,"message":"88","line":136,"column":8,"nodeType":"89","endLine":141,"endColumn":10},{"ruleId":"72","replacedBy":"90"},{"ruleId":"74","replacedBy":"91"},"no-native-reassign",["92"],"no-negated-in-lhs",["93"],"no-unused-vars","'moment' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useCallback does nothing when called with only one argument. Did you forget to pass an array of dependencies?","React Hook useEffect has an unnecessary dependency: 'socket'. Either exclude it or remove the dependency array. Outer scope values like 'socket' aren't valid dependencies because mutating them doesn't re-render the component.","ArrayExpression",["94"],"'messageContainer' is assigned a value but never used.","'loading' is assigned a value but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement",["92"],["93"],"no-global-assign","no-unsafe-negation",{"desc":"95","fix":"96"},"Update the dependencies array to be: [addToChat]",{"range":"97","text":"98"},[2010,2029],"[addToChat]"]